basePath: /
definitions:
  database.Model:
    properties:
      currentUser:
        $ref: '#/definitions/database.User'
      project:
        $ref: '#/definitions/database.Project'
      role:
        $ref: '#/definitions/database.Role'
      task:
        $ref: '#/definitions/database.Task'
      team:
        $ref: '#/definitions/database.Team'
      user:
        $ref: '#/definitions/database.User'
      user_form:
        $ref: '#/definitions/database.UserForm'
      user_team:
        $ref: '#/definitions/database.UserTeam'
    type: object
  database.Project:
    properties:
      current_status:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      team_id:
        type: integer
    type: object
  database.Role:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  database.Task:
    properties:
      assigner_id:
        type: integer
      current_status:
        type: string
      description:
        type: string
      end_time:
        type: string
      id:
        type: integer
      name:
        type: string
      project_id:
        type: integer
      start_time:
        type: string
      user_id:
        type: integer
    type: object
  database.Team:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  database.User:
    properties:
      email:
        type: string
      id:
        type: integer
      is_admin:
        type: boolean
      name:
        type: string
      password:
        type: string
      phone:
        type: string
      surname:
        type: string
      username:
        type: string
    type: object
  database.UserForm:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  database.UserTeam:
    properties:
      role_id:
        type: integer
      team_id:
        type: integer
      user_id:
        type: integer
    type: object
  handler.token:
    properties:
      token:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: altayyerassyl@gmail.com
    name: Task manager
  description: Task manager for a developing company.
  title: Task manager
  version: "1.0"
paths:
  /check:
    get:
      consumes:
      - application/json
      description: Chech if user exists based on authorization header
      parameters:
      - description: Authorization header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Check user
      tags:
      - user
  /login:
    post:
      consumes:
      - application/json
      description: Login user and return access and refresh tokens.
      parameters:
      - description: User form
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/database.Model'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
      summary: Login
      tags:
      - auth
  /logout:
    post:
      consumes:
      - application/json
      description: Deactivate given refresh token
      parameters:
      - description: Enter refresh token
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/handler.token'
      - description: Authorization header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
      summary: log out
      tags:
      - user
  /project:
    get:
      description: get all projects from recieved user id
      parameters:
      - description: Authorization header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: get projects by user
      tags:
      - user
    post:
      consumes:
      - application/json
      description: Create a project and assign it to the team
      parameters:
      - description: Enter project info and team id
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/database.Model'
      - description: Authorization header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
      summary: Create project
      tags:
      - user
    put:
      consumes:
      - application/json
      description: update project based on its id
      parameters:
      - description: Enter project info
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/database.Model'
      - description: Authorization header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
      summary: update project
      tags:
      - user
  /project/{project_id}/task:
    get:
      description: get all tasks from recieved project id
      parameters:
      - description: Enter project id
        in: path
        name: project_id
        required: true
        type: integer
      - description: Authorization header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: get tasks by project
      tags:
      - user
  /refresh:
    post:
      consumes:
      - application/json
      description: Recieves refresh token as a json named "token" and return access
        and refresh tokens.
      parameters:
      - description: Refresh token
        in: body
        name: refresh
        required: true
        schema:
          $ref: '#/definitions/handler.token'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
      summary: Refresh token
      tags:
      - auth
  /task:
    get:
      description: get all tasks from recieved user id
      parameters:
      - description: Authorization header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: get tasks by user
      tags:
      - user
    post:
      consumes:
      - application/json
      description: create a task and assign it to someone and project.
      parameters:
      - description: Enter task info and team id
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/database.Model'
      - description: Authorization header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
      summary: create a task
      tags:
      - user
    put:
      consumes:
      - application/json
      description: update task based on its id
      parameters:
      - description: Enter task info
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/database.Model'
      - description: Authorization header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: update task
      tags:
      - user
  /team:
    post:
      consumes:
      - application/json
      description: Create an team from json file with team as a key and structure
        as a value.
      parameters:
      - description: Team information
        in: body
        name: team
        required: true
        schema:
          $ref: '#/definitions/database.Model'
      - description: Authorization header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
      summary: Create a team
      tags:
      - admin
  /team/{team_id}:
    delete:
      description: Delete a team by its id.
      parameters:
      - description: Team id
        in: path
        name: team_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Dealete a team
      tags:
      - admin
  /team/{team_id}/user:
    get:
      description: Get all users in the taeam
      parameters:
      - description: Enter team id
        in: path
        name: team_id
        required: true
        type: integer
      - description: Authorization header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
      summary: Get team members
      tags:
      - user
  /team/user:
    post:
      consumes:
      - application/json
      description: Add new user to the team.
      parameters:
      - description: Enter user id, team id and role id
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/database.Model'
      - description: Authorization header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
      summary: Add user
      tags:
      - user
  /user:
    post:
      consumes:
      - application/json
      description: Create an user from json file with user as a key and structure
        as a value.
      parameters:
      - description: User information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/database.Model'
      - description: Authorization header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
      summary: Create an user
      tags:
      - admin
swagger: "2.0"
